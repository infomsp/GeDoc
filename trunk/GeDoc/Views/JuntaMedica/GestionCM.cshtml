@using GeDoc.Models.JuntaMedica.Modelo
<script>
    function onComplete_JuntaMedicaGestionCM(e) {
        debugger;
        if (e.name != "update" && e.name != "insert") {
            CerrarWaiting();
            $("#txtBusquedaGestionCM").focus();
        }
    }

    function onActivate_wCRUDJuntaMedicaGestionCM() {
        AbrirWaitingCRUD();
    }

    function onActivate_wCRUDJuntaMedicaGestionCM() {
        //if (FrenarVideo != null) {
        //    FrenarVideo();
        //}
    }

    function onLoad_wCRUDJuntaMedicaGestionCM() {
        var wGestionCM = $(this).data("tWindow");
        var wContenido = wGestionCM.content() + "<div id = 'divCRUDJuntaMedicaGestionCM_Content' ></div>";
        wGestionCM.content(wContenido);
    }

    function onActivate_wAltaAnulacionGestionCM() {
        AbrirWaitingCRUD();
    }

    function onLoad_wAltaAnulacionGestionCM() {
        var wGestionCM = $(this).data("tWindow");
        var wContenido = wGestionCM.content() + "<div id = 'divAltaAnulacionGestionCM_Content' ></div>";
        wGestionCM.content(wContenido);
    }

    function onDataBinding_JuntaMedicaGestionCM(args) {
        AbrirWaiting();
        var textoBuscado = $("#txtBusquedaGestionCM").val() == null ? "" : $("#txtBusquedaGestionCM").val();
        args.data = $.extend(args.data, { textoBuscado: textoBuscado });
    }

    function onCommand_RefreshGestionCM() {
        $("#gridGestionCM").data("tGrid").ajaxRequest();
    }

    function onExportar() {
        var grid = $("#gridGestionCM").data('tGrid');
        _OrderBy = (grid.orderBy || '~');
        _FilterBy = (grid.filterBy || '~');
        window.open(GetPathApp("JuntaMedica/Exportar") + "?Filtro=" + _FilterBy + "&Orden=" + _OrderBy);
    }

    function onEjecutaAccionGestionCM(pAccion, cmId) {
        switch (pAccion) {
            case "Agregar":
                var wGestionCM = $("#wCRUDJuntaMedicaGestionCM").data("tWindow");
                wGestionCM.center().open().title(pAccion + " Carta Médica");
                var _Post = GetPathApp("DCRM/SolicitudDeCartaMedica");
                $.ajax({
                    type: "POST",
                    url: _Post,
                    error: function () {
                        jAlert("Error al guardar datos.", "Error...", function () {
                            $("form:not(.filter) :input:visible:enabled:first").focus().select();
                        });
                    },
                    success: function (respuesta) {
                        if (respuesta != null) {
                            $("#divCRUDJuntaMedicaGestionCM_Content").html(respuesta);
                        }
                    }
                });
                return;
            case "AltaAnulacion":
                var wGestionCM = $("#wAltaAnulacionGestionCM").data("tWindow");
                wGestionCM.center().open();

                var _Post = GetPathApp("DCRM/getDatosCartaMedicaAA");
                $.ajax({
                    type: "POST",
                    url: _Post,
                    error: function () {
                        jAlert("Error al guardar datos.", "Error...", function () {
                            $("form:not(.filter) :input:visible:enabled:first").focus().select();
                        });
                    },
                    success: function (respuesta) {
                        debugger;
                        if (respuesta != null) {
                            $("#divAltaAnulacionGestionCM_Content").html(respuesta);
                        }
                    }
                });
                return;
        }

        var wGestionCM = $("#wCRUDJuntaMedicaGestionCM").data("tWindow");
        wGestionCM.center().open().title(pAccion + " Carta Médica");
        var _Post = GetPathApp("JuntaMedica/getDatosGestionCM");
        $.ajax({
            type: "POST",
            url: _Post,
            data: { cmedId: cmId, pAccion: pAccion },
            error: function () {
                CerrarWaitingCRUD();
                jAlert("Error al guardar datos.", "Error...", function () {
                    $("form:not(.filter) :input:visible:enabled:first").focus().select();
                });
            },
            success: function (respuesta) {
                CerrarWaitingCRUD();
                if (respuesta != null) {
                    $("#divCRUDJuntaMedicaGestionCM_Content").html(respuesta);
                }
            }
        });
    }

    function onCommand_JuntaMedicaGestionCM(e) {
        switch (e.name) {
            case "cmdEliminar":
                onEjecutaAccionGestionCM("Eliminar", e.dataItem["cmedId"]);

                e.preventDefault();
                e.stopPropagation();
                break;
            case "cmdConsultar":
                if (e.dataItem["licFechaFinal"] == null && e.dataItem["estEstado"] != "AN") {
                    jAlert('La carta médica seleccionada no tiene aprobada la Licencia Médica', '¡Atención!');
                    return;
                }

                var _Parametros = new Array(new Array(e.dataItem["cmedId"] * -1, 'licenciaId'));
                InvocarReporte('ComprobanteLicencia', _Parametros, true);

                e.preventDefault();
                e.stopPropagation();
                break;
        }
    }

    $("#txtBusquedaGestionCM").keydown(function(e) {
        var textoBuscado = $("#txtBusquedaGestionCM").val();
        if (e.which === 13) {
            var grid = $("#gridGestionCM").data("tGrid");
            grid.ajaxRequest();

            e.preventDefault();
            e.stopPropagation();
        }
    });

    $("#txtBusquedaGestionCM").focus(function(e) {
        $(this).select();
    });

</script>
@(Html.Telerik().Grid<getListaCMGestion_Result>()
      .Name("gridGestionCM")
      .DataKeys(keys =>
      {
          keys.Add(p => p.cmedId);
      })
      .Localizable("es-AR")
      .ToolBar(commands => commands.Template(
          @<text>
              <div style="margin-top: 5px; margin-left: 10px; margin-bottom: 5px;">
                  <label style="">Búsqueda:</label>
                  <input type="text" id="txtBusquedaGestionCM" style="width: 449px;"/>
                  <label class="t-button">
                      <img class="t-icon t-refresh" onclick="onCommand_RefreshGestionCM(this);" title="Recargar lista de Cartas Médicas"/>
                  </label>
                  <label class="t-button">
                      <img class="t-icon t-add" onclick="onEjecutaAccionGestionCM('Agregar', -1);" title="Agregar Carta Médica"/>
                  </label>
                  <label class="t-button" style="display: @((Session["Permisos"] as GeDoc.Acciones).Visibilidad("JuntaMedica", "Eliminar"));">
                      <img class="t-icon t-addfolder" onclick="onEjecutaAccionGestionCM('AltaAnulacion', -1);" title="Dar Alta o Anular carta Médica"/>
                  </label>
                  <label class="t-button" title="Exportar listado a Excel" onclick="onExportar();">
                      @*<img class="t-icon t-addfolder" onclick="onExportar();" title="Exportar listado a Excel"/>*@
                      <img class="t-icon" src="@Url.Content("~/Content/General/Vacio-Transparente.png")" height="18" width="18" style="background: url('@Url.Content("~/Content/General/Crud")/Excel.png') no-repeat 0px 0px; vertical-align: middle;"/>
                  </label>
              </div>
           </text>))
      .DataBinding(dataBinding =>
      {
          dataBinding.Ajax()
              .Select("getListadoDeCartasAGestionCM", "JuntaMedica", new {textoBuscado = ""});
      })
      .Columns(columns =>
      {
          columns.Command(commands =>
          {
              //commands.Custom("cmdEliminar")
              //    .Ajax(true)
              //    .ButtonType(GridButtonType.Image)
              //    .SendDataKeys(false)
              //    .ImageHtmlAttributes(new { style = "background: url('" + Url.Content("~/Content") + "/" + Session["Version"] + "/" + Session["Estilo"] + "/sprite.png') no-repeat -16px -337px;", title = "Eliminar carta médica" })
              //    .HtmlAttributes(new {style = "display: " + (Session["Permisos"] as GeDoc.Acciones).Visibilidad("JuntaMedica", "Eliminar")})
              //    .SendState(false)
              //    .DataRouteValues(route =>
              //    {
              //        route.Add(o => o.cmedId).RouteKey("cmedId");
              //    });
              commands.Custom("cmdConsultar")
                  .Ajax(true)
                  .ButtonType(GridButtonType.Image)
                  .SendDataKeys(false)
                  .ImageHtmlAttributes(new { style = "background: url('" + Url.Content("~/Content/General/Printer.png')") + " no-repeat 0px 0px; background-size: 16px 16px", title = "Imprimir Acuse de Recibo de licencia médica" })
                  .HtmlAttributes(new { style = "display: " + (Session["Permisos"] as GeDoc.Acciones).Visibilidad("JuntaMedica", "Examinar") })
                  .SendState(false)
                  .DataRouteValues(route =>
                  {
                      route.Add(o => o.cmedId).RouteKey("cmedId");
                  });
          }).Width("80px").Title("Acciones");
          columns.Bound(c => c.estEstado).Width("25px").Title("").Filterable(false).Visible(true).HtmlAttributes(new { style = "white-space: nowrap;" })
              .ClientTemplate("<div title='<#= estEstado == \"AL\" || estEstado == \"AA\" || estEstado == \"AN\" ? EstadoCM : \"\" #>' style='width: 100%; text-align: left;'><img src='" + Url.Content("~/Content") + "/Estados/<#= estEstado == \"AL\" ? \"Verde-2.png\" : (estEstado == \"AA\" ? \"Naranja-2.png\" : (estEstado == \"AN\" ? \"Rojo(2).png\" : \"Gris-E.png\")) #>' height='10px' width='10px' style='margin-right: 5px; <#= estEstado == \"AL\" || estEstado == \"AA\" || estEstado == \"AN\" ? \"\" : \"display: none;\" #>' /></div>");
          columns.Bound(c => c.cmedOrdenRecepcion).Width("50px").Title("Orden").Visible(false);
          columns.Bound(c => c.cmedId).Width("100px").Title("Id").Visible(false);
          columns.Bound(c => c.cmedNumero).Width("130px").Title("Número de CM").Visible(true);
          columns.Bound(c => c.cmedFecha).Width("90px").Format("{0:dd/MM/yyyy}").Title("Fecha").Visible(true);
          columns.Bound(c => c.agtApellidoNombre).Width("300px").Title("Agente").Visible(true).HtmlAttributes(new { style = "white-space: nowrap;" })
                .ClientTemplate("<label title='<#= agtApellidoNombre #>' style='cursor: pointer;' style='white-space: nowrap;'><#= agtApellidoNombre #> </label>");
          columns.Bound(c => c.agtDNI).Width("90px").Title("DNI").Visible(true);
          columns.Bound(c => c.licFechaInicial).Width("100px").Title("Licencia desde").Format("{0:dd/MM/yyyy}").Visible(true);
          columns.Bound(c => c.licCantidad).Width("80px").Title("Días de Lic.").Visible(true).Filterable(false);
          columns.Bound(c => c.Articulo).Width("150px").Title("Artículo").Visible(true).HtmlAttributes(new { style = "white-space: nowrap;" })
                .ClientTemplate("<label title='<#= Articulo #>' style='cursor: pointer;' style='white-space: nowrap;'><#= Articulo #></label>");
          columns.Bound(c => c.agtLugarTrabajo).Width("300px").Title("Lugar de Trabajo").Visible(true).HtmlAttributes(new { style = "white-space: nowrap;" })
                .ClientTemplate("<label title='<#= agtLugarTrabajo #>' style='cursor: pointer;' style='white-space: nowrap;'><#= agtLugarTrabajo #> </label>");
          columns.Bound(c => c.Ministerios).Width("300px").Title("Ministerio").Visible(true).HtmlAttributes(new { style = "white-space: nowrap;" })
                .ClientTemplate("<label title='<#= Ministerios #>' style='cursor: pointer;' style='white-space: nowrap;'><#= Ministerios #> </label>");
          columns.Bound(c => c.Reparticiones).Width("300px").Title("Reparticiones").Visible(true).HtmlAttributes(new { style = "white-space: nowrap;" })
                .ClientTemplate("<label title='<#= Reparticiones #>' style='cursor: pointer;' style='white-space: nowrap;'><#= Reparticiones #> </label>");
          columns.Bound(c => c.EstadoCM).Width("150px").Title("Estado").Visible(true).HtmlAttributes(new { style = "white-space: nowrap;" })
                .ClientTemplate("<label title='<#= EstadoCM #>' style='cursor: pointer;' style='white-space: nowrap;'><#= EstadoCM #> </label>");
          columns.Bound(c => c.estFecha).Width("120px").Format("{0:dd/MM/yyyy}").Title("Cambio de Estado").Visible(true);
          columns.Bound(c => c.estFecha).Width("70px").Format("{0:hh:mm}").Title("Hora").Visible(true).Filterable(false);
      })
      .Editable(editing => editing
          .Mode(GridEditMode.PopUp).DisplayDeleteConfirmation(true))
      .Pageable((paging) =>
          paging.Enabled(true)
              .PageSize(((int) Session["FilasPorPagina"])))
      .Footer(true)
      .Filterable()
      .Selectable()
      .ClientEvents(events => events.OnComplete("onComplete_JuntaMedicaGestionCM").OnCommand("onCommand_JuntaMedicaGestionCM").OnDataBinding("onDataBinding_JuntaMedicaGestionCM"))
      .Resizable(resizing => resizing.Columns(true))
      .Scrollable(scroll => scroll.Enabled(true).Height(((int) Session["AlturaGrilla"])))
      .Sortable()
      )

@{
    Html.Telerik().Window()
      .Name("wCRUDJuntaMedicaGestionCM")
      .Title("Carta Médica")
      .Visible(false)
      .Content(() =>
      {
          Html.RenderPartial("WaitingCRUD");
      })
      .Buttons(b => b.Close())
      .Draggable(true)
      .Scrollable(false)
      .Modal(true)
      .Width(1024)
      .Height(410)
      .ClientEvents(eventos => eventos.OnActivate("onActivate_wCRUDJuntaMedicaGestionCM").OnLoad("onLoad_wCRUDJuntaMedicaGestionCM"))
      .Render();
}

@{
    Html.Telerik().Window()
      .Name("wAltaAnulacionGestionCM")
      .Title("Alta Médica o Anulación...")
      .Visible(false)
      .Content(() =>
      {
          Html.RenderPartial("WaitingCRUD", "AltaAnulacionCartaMedica");
      })
      .Buttons(b => b.Close())
      .Draggable(true)
      .Scrollable(false)
      .Modal(true)
      .Width(1024)
      .Height(450)
      .ClientEvents(eventos => eventos.OnActivate("onActivate_wAltaAnulacionGestionCM").OnLoad("onLoad_wAltaAnulacionGestionCM"))
      .Render();
}